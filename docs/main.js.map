{"version":3,"sources":["./src/app/views/decode/decode.component.ts","./src/app/views/decode/decode.component.html","./src/app/views/documentation/documentation.component.ts","./src/app/views/documentation/documentation.component.html","./src/app/views/documentation/documentation.module.ts","./src/main.module.ts","./src/app/components/matrix/matrix.component.html","./src/app/components/matrix/matrix.component.ts","./src/environments/environment.ts","./src/app/components/input/input.component.ts","./src/app/components/input/input.component.html","./src/app/app.routes.ts","./src/app/services/vigenere-cipher.service.ts","./src/main.component.ts","./src/main.component.html","./src/app/views/encode/encode.module.ts","./src/app/components/components.module.ts","./src/app/views/encode/encode.component.ts","./src/app/views/encode/encode.component.html","./src/app/views/decode/decode.module.ts","./src/app/components/visualization/visualization.component.ts","./src/app/components/visualization/visualization.component.html","./src/app/components/output/output.component.ts","./src/app/components/output/output.component.html","./src/app/app-routing.module.ts","./src/app/views/views.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Component} from '@angular/core';\r\nimport {IVisualizationStep, VigenereCipherService} from '../../services/vigenere-cipher.service';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-decode',\r\n  templateUrl: './decode.component.html'\r\n})\r\nexport class DecodeComponent {\r\n  encodedText = 'MO SRWM BJEHSO CNNGY CROLT';\r\n  passwordKey = 'TAJNE';\r\n  decodedText: string;\r\n  visualizationSteps: IVisualizationStep[];\r\n  visualizationControl = new FormControl(false);\r\n\r\n  constructor(\r\n    private cipher: VigenereCipherService\r\n  ) {\r\n  }\r\n\r\n  decode(): void {\r\n    this.decodedText = this.cipher.decode(this.encodedText, 'TAJNE');\r\n    this.visualizationSteps = this.cipher.getVisualizationSteps();\r\n    console.log(this.visualizationSteps);\r\n  }\r\n}\r\n","<h1>Decode</h1>\r\n\r\n<div class=\"card mb-5\">\r\n  <div class=\"card-body\">\r\n    <app-input [(textInput)]=\"encodedText\">\r\n      Text to decode:\r\n    </app-input>\r\n    <app-input [(textInput)]=\"passwordKey\" [removeWhitespaces]=\"true\">\r\n      Password:\r\n    </app-input>\r\n    <button (click)=\"decode()\" class=\"btn btn-primary mt-2\">\r\n      Decode text\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"card mb-5\" *ngIf=\"decodedText\">\r\n  <div class=\"card-body\">\r\n    <div class=\"mb-5\">\r\n      <app-output [output]=\"decodedText\">\r\n        Decoded output\r\n      </app-output>\r\n      <div class=\"custom-control custom-switch\">\r\n        <input type=\"checkbox\" class=\"custom-control-input\" id=\"visualize\" [formControl]=\"visualizationControl\">\r\n        <label class=\"custom-control-label\" for=\"visualize\">Show visualization</label>\r\n      </div>\r\n    </div>\r\n    <app-visualization\r\n      *ngIf=\"visualizationControl.value\"\r\n      [mode]=\"true\"\r\n      [visualizationSteps]=\"visualizationSteps\">\r\n    </app-visualization>\r\n  </div>\r\n</div>\r\n","import {Component} from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-documentation',\r\n  templateUrl: './documentation.component.html'\r\n})\r\nexport class DocumentationComponent {\r\n}\r\n","<h1>Documentation</h1>\r\n","import {NgModule} from '@angular/core';\r\nimport {DocumentationComponent} from './documentation.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DocumentationComponent\r\n  ]\r\n})\r\nexport class DocumentationModule {\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { MainComponent } from './main.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {AppRoutingModule} from './app/app-routing.module';\nimport {ViewsModule} from './app/views/views.module';\n\n@NgModule({\n  declarations: [\n    MainComponent,\n  ],\n  imports: [\n    AppRoutingModule,\n    ViewsModule,\n    BrowserModule,\n    NgbModule\n  ],\n  bootstrap: [MainComponent]\n})\nexport class MainModule { }\n","<div class=\"my-2 d-flex justify-content-center\">\r\n\r\n\r\n <table class=\"w-75 table table-bordered table-sm table-striped\">\r\n   <ng-container [ngSwitch]=\"decodeMode\">\r\n     <ng-container *ngSwitchCase=\"false\">\r\n       <thead>\r\n       <tr>\r\n         <th *ngFor=\"let char of matrix[0];let index = index\"\r\n             class=\"text-center\"\r\n             [ngClass]=\"[\r\n            index === inputCharIndex && !(index === inputCharIndex && keyCharIndex === 0) ? 'bg-danger' : '',\r\n            index === keyCharIndex && keyCharIndex === 0 && !(index === inputCharIndex && keyCharIndex === 0) ? 'bg-danger' : '',\r\n            keyCharIndex === 0 && !(index === inputCharIndex && keyCharIndex === 0) ? 'bg-info' : '',\r\n            index === inputCharIndex && keyCharIndex === 0 ? 'bg-success' : ''\r\n           ]\">\r\n           {{char}}\r\n         </th>\r\n       </tr>\r\n       </thead>\r\n       <tbody>\r\n       <ng-container *ngFor=\"let level of matrix;let firstLevel = first;let index = index\">\r\n         <tr *ngIf=\"!firstLevel\">\r\n           <td *ngFor=\"let char of level;let firstChar = first;let charIndex = index\"\r\n               class=\"text-center\"\r\n               [ngClass]=\"[\r\n              firstChar ? 'font-weight-bold' : '',\r\n              firstChar && index === keyCharIndex ? 'bg-danger' : '',\r\n              inputCharIndex === charIndex && !(inputCharIndex === charIndex && keyCharIndex === index)  ? 'bg-info' : '',\r\n              keyCharIndex === index && !(inputCharIndex === charIndex && keyCharIndex === index) ? 'bg-info' : '',\r\n              inputCharIndex === charIndex && keyCharIndex === index ? 'bg-success' : ''\r\n             ]\">\r\n             {{char}}\r\n           </td>\r\n         </tr>\r\n       </ng-container>\r\n       </tbody>\r\n     </ng-container>\r\n\r\n     <ng-container *ngSwitchCase=\"true\">\r\n       <thead>\r\n       <tr>\r\n         <th *ngFor=\"let char of matrix[0];let index = index\"\r\n             class=\"text-center\"\r\n             [ngClass]=\"[\r\n            index === inputCharIndex ? 'bg-success' : '',\r\n            index === keyCharIndex && keyCharIndex === 0 && !(index === inputCharIndex) ? 'bg-danger' : '',\r\n            keyCharIndex === 0 && !(index === inputCharIndex && keyCharIndex === 0) ? 'bg-info' : '',\r\n           ]\">\r\n           {{char}}\r\n         </th>\r\n       </tr>\r\n       </thead>\r\n       <tbody>\r\n       <ng-container *ngFor=\"let level of matrix;let firstLevel = first;let index = index\">\r\n         <tr *ngIf=\"!firstLevel\">\r\n           <td *ngFor=\"let char of level;let firstChar = first;let charIndex = index\"\r\n               class=\"text-center\"\r\n               [ngClass]=\"[\r\n              firstChar ? 'font-weight-bold' : '',\r\n              inputCharIndex === charIndex && !(inputCharIndex === charIndex && keyCharIndex === index)  ? 'bg-info' : '',\r\n              keyCharIndex === index && !(firstChar && index === keyCharIndex) ? 'bg-info' : '',\r\n              inputCharIndex === charIndex && keyCharIndex === index ? 'bg-danger' : '',\r\n              firstChar && index === keyCharIndex ? 'bg-danger' : ''\r\n             ]\">\r\n             {{char}}\r\n           </td>\r\n         </tr>\r\n       </ng-container>\r\n       </tbody>\r\n     </ng-container>\r\n\r\n   </ng-container>\r\n </table>\r\n</div>\r\n","import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\r\nimport {ICurrentVisualizationStep} from '../visualization/visualization.component';\r\nimport {IMatrix, VigenereCipherService} from '../../services/vigenere-cipher.service';\r\n\r\n@Component({\r\n  selector: 'app-matrix',\r\n  templateUrl: './matrix.component.html',\r\n  styleUrls: ['./matrix.component.css']\r\n})\r\nexport class MatrixComponent implements OnChanges {\r\n  @Input() currentVisualizationStep: ICurrentVisualizationStep;\r\n  @Input() decodeMode = true;\r\n  matrix: IMatrix;\r\n  inputCharIndex: number;\r\n  keyCharIndex: number;\r\n\r\n  constructor(\r\n    cipher: VigenereCipherService\r\n  ) {\r\n    this.matrix = cipher.getMatrix();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.currentVisualizationStep) {\r\n      this.updateCharIndex();\r\n    }\r\n  }\r\n\r\n  private updateCharIndex(): void {\r\n    this.inputCharIndex = this.matrix[0].findIndex((char) => {\r\n      return this.currentVisualizationStep.step.prevChar === char;\r\n    });\r\n\r\n    this.keyCharIndex = this.matrix.findIndex((level) => {\r\n      return level[0] === this.currentVisualizationStep.step.keyChar;\r\n    });\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\n\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html'\n})\nexport class InputComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() removeWhitespaces = false;\n  @Input() textInput: string;\n  @Output() readonly textInputChange = new EventEmitter<string>();\n  control = new FormControl();\n  private destroy$ = new Subject<void>();\n\n ngOnInit(): void {\n   this.control.valueChanges\n     .pipe(takeUntil(this.destroy$))\n     .subscribe((value) => {\n       this.textInputChange.emit(this.removeWhitespaces ? value.replace(/\\s/g, '') : value);\n     });\n }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.textInput?.currentValue) {\n      this.control.setValue(this.textInput);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"form-group\">\n  <label class=\"form-label\">\n    <ng-content></ng-content>\n  </label>\n  <textarea class=\"form-control\"\n            placeholder=\"Secret message\"\n            [formControl]=\"control\">\n  </textarea>\n</div>\n","import {EncodeComponent} from './views/encode/encode.component';\r\nimport {DecodeComponent} from './views/decode/decode.component';\r\nimport {DocumentationComponent} from './views/documentation/documentation.component';\r\n\r\n\r\nexport const appRoutes = [\r\n  { path: 'encode', component: EncodeComponent },\r\n  { path: 'decode', component: DecodeComponent },\r\n  { path: '', component:  DocumentationComponent, pathMatch: 'full'},\r\n  { path: '**',   redirectTo: '' },\r\n];\r\n","import {Injectable} from '@angular/core';\n\nexport interface IVisualizationStep {\n  id: number;\n  prevChar: string;\n  nextChar: string;\n  keyChar: string;\n}\n\nexport type IMatrix = string[][];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VigenereCipherService {\n  private alphabet = Array.from('ABCDEFGHIJKLMNOPQRSTUVWXYZ');\n  private matrix: IMatrix;\n  private visualizationSteps: IVisualizationStep[] = [];\n\n  encode(value: string, key: string): string {\n    this.resetVisualizationSteps();\n\n    if (!this.matrix) {\n      this.matrix = this.computeMatrix();\n    }\n\n    key = this.transformKey(key, value.length);\n    let keyIndex = 0;\n    const encodedValueArray = Array.from(value).map((char) => {\n      const encodedChar = this.encodeCharacter(char, key[keyIndex]);\n\n      if (char !== ' ') {\n        keyIndex++;\n      }\n      return encodedChar;\n    });\n\n    return encodedValueArray.join('');\n  }\n\n  decode(encodedValue: string, key: string): string {\n    this.resetVisualizationSteps();\n\n    if (!this.matrix) {\n      this.matrix = this.computeMatrix();\n    }\n    key = this.transformKey(key, encodedValue.length);\n\n    let keyIndex = 0;\n    const decodedValueArray = Array.from(encodedValue).map((char) => {\n      const decodedChar = this.decodeCharacter(char, key[keyIndex]);\n\n      if (char !== ' ') {\n        keyIndex++;\n      }\n      return decodedChar;\n    });\n\n    return decodedValueArray.join('');\n  }\n\n  getAlphabet(): string {\n    return this.alphabet.join(' ');\n  }\n\n  getVisualizationSteps(): IVisualizationStep[] {\n    return this.visualizationSteps;\n  }\n\n  /**\n   * Add all characters from given string to alphabet.\n   */\n  widenAlphabet(charactersString: string): void {\n    this.alphabet.push(...Array.from(charactersString));\n  }\n\n  private decodeCharacter(characterToDecode: string, passwordChar: string): string {\n    if (characterToDecode === ' ') {\n      return characterToDecode;\n    }\n\n    const col = this.matrix[0].findIndex(char => char === passwordChar);\n    const row = this.matrix.findIndex((char, index) => {\n      return characterToDecode === this.matrix[index][col];\n    });\n    const decodedChar = this.matrix[row][0];\n\n    this.registerStep(characterToDecode, decodedChar, passwordChar);\n    return decodedChar;\n  }\n\n  private encodeCharacter(characterToEncode: string, passwordChar: string): string {\n    if (characterToEncode === ' ') {\n      return characterToEncode;\n    }\n\n    const characterToEncodeIndex = this.alphabet.findIndex(char => char === characterToEncode);\n    const passwordCharIndex = this.alphabet.findIndex(char => char === passwordChar);\n    const encodedChar = this.matrix[characterToEncodeIndex][passwordCharIndex];\n\n    this.registerStep(characterToEncode, encodedChar, passwordChar);\n\n    return encodedChar;\n  }\n\n  getMatrix(): string[][] {\n    return this.matrix ? this.matrix : this.computeMatrix();\n  }\n\n  private computeMatrix(): string[][] {\n    return this.alphabet\n      .map((char, index) => {\n        return this.computeArrayLevel(index);\n      });\n  }\n\n  private computeArrayLevel(push: number): string[] {\n    const array = this.alphabet;\n    const movedLevel = array.map((char, index) => {\n      return array[index + push];\n    });\n\n    const firstEmptyItem = movedLevel.findIndex(value => typeof value === 'undefined');\n    if (firstEmptyItem === -1) {\n      return movedLevel;\n    }\n\n    for (let i = firstEmptyItem, j = 0; i < movedLevel.length; i++, j++) {\n      movedLevel[i] = array[j];\n    }\n    return movedLevel;\n  }\n\n  private transformKey(key: string, length: number): string {\n    let transformedKey = key.substr(0, length);\n\n    let charIndex = 0;\n    while (transformedKey.length < length) {\n      if (key[charIndex]) {\n        transformedKey += key[charIndex];\n        charIndex++;\n      } else {\n        charIndex = 0;\n      }\n    }\n\n    return transformedKey;\n  }\n\n  private registerStep(prevChar: string, nextChar: string, keyChar: string): void {\n    this.visualizationSteps.push({\n      id: this.visualizationSteps.length,\n      prevChar,\n      nextChar,\n      keyChar\n    });\n  }\n\n  private resetVisualizationSteps(): void {\n    this.visualizationSteps = [];\n  }\n}\n","import { Component } from '@angular/core';\nimport {IVisualizationStep, VigenereCipherService} from 'src/app/services/vigenere-cipher.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './main.component.html'\n})\nexport class MainComponent {\n  textToEncode = 'TO JEST BARDZO TAJNY TEKST';\n  encodedText: string;\n  decodedText: string;\n  matrix: string[][];\n  visualizationSteps: IVisualizationStep[];\n\n  constructor(\n    private cipher: VigenereCipherService\n  ) {\n  }\n\n  encode(): void {\n    this.encodedText = this.cipher.encode(this.textToEncode, 'TAJNE');\n    this.visualizationSteps = this.cipher.getVisualizationSteps();\n  }\n\n  decode(): void {\n    this.decodedText = this.cipher.decode(this.encodedText, 'TAJNE');\n    this.visualizationSteps = this.cipher.getVisualizationSteps();\n  }\n}\n","<div class=\"mb-5\">\r\n  <nav class=\"navbar navbar-dark bg-dark navbar-expand\">\r\n    <ul class=\"navbar-nav container\">\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\"\r\n           routerLink=\"\"\r\n           routerLinkActive=\"active\"\r\n           [routerLinkActiveOptions]=\"{ exact: true }\">\r\n          Documentation\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\"\r\n           routerLink=\"encode\"\r\n           routerLinkActive=\"active\">\r\n          Encode\r\n        </a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\"\r\n           routerLink=\"decode\"\r\n           routerLinkActive=\"active\">\r\n          Decode\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n</div>\r\n\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n\r\n<!--<ul class=\"d-flex justify-content-between list-unstyled\">-->\r\n<!--  <li routerLink=\"\"-->\r\n<!--      routerLinkActive=\"font-weight-bold\"-->\r\n<!--      [routerLinkActiveOptions]=\"{ exact: true }\">-->\r\n<!--    Documentation-->\r\n<!--  </li>-->\r\n<!--  <li routerLink=\"encode\" routerLinkActive=\"font-weight-bold\">Encode</li>-->\r\n<!--  <li routerLink=\"decode\" routerLinkActive=\"font-weight-bold\">Decode</li>-->\r\n<!--</ul>-->\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {EncodeComponent} from './encode.component';\r\nimport {ComponentsModule} from '../../components/components.module';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ComponentsModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n  declarations: [\r\n    EncodeComponent\r\n  ]\r\n})\r\nexport class EncodeModule {\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {OutputComponent} from './output/output.component';\nimport {InputComponent} from './input/input.component';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { VisualizationComponent } from './visualization/visualization.component';\nimport { MatrixComponent } from './matrix/matrix.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule\n  ],\n  declarations: [\n    OutputComponent,\n    InputComponent,\n    VisualizationComponent,\n    MatrixComponent\n  ],\n  exports: [\n    OutputComponent,\n    InputComponent,\n    VisualizationComponent\n  ]\n})\nexport class ComponentsModule {\n}\n","import {Component} from '@angular/core';\r\nimport {IVisualizationStep, VigenereCipherService} from '../../services/vigenere-cipher.service';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-encode',\r\n  templateUrl: './encode.component.html',\r\n})\r\nexport class EncodeComponent {\r\n  textToEncode = 'TO JEST BARDZO TAJNY TEKST';\r\n  passwordKey = 'TAJNE';\r\n  encodedText: string;\r\n  visualizationSteps: IVisualizationStep[];\r\n  matrix: string[][];\r\n  visualizationControl = new FormControl(false);\r\n\r\n  constructor(\r\n    private cipher: VigenereCipherService\r\n  ) {\r\n  }\r\n\r\n  encode(): void {\r\n    this.encodedText = this.cipher.encode(this.textToEncode, this.passwordKey);\r\n    this.visualizationSteps = this.cipher.getVisualizationSteps();\r\n    this.matrix = this.cipher.getMatrix();\r\n  }\r\n}\r\n","<h1>Encode</h1>\r\n\r\n<div class=\"card mb-5\">\r\n <div class=\"card-body\">\r\n   <app-input [(textInput)]=\"textToEncode\">\r\n     Text to encode:\r\n   </app-input>\r\n   <app-input [(textInput)]=\"passwordKey\" [removeWhitespaces]=\"true\">\r\n     Password:\r\n   </app-input>\r\n   <button (click)=\"encode()\" class=\"btn btn-primary mt-2\">\r\n     Encode text\r\n   </button>\r\n </div>\r\n</div>\r\n\r\n<div class=\"card mb-5\" *ngIf=\"encodedText\">\r\n <div class=\"card-body\">\r\n   <div class=\"mb-5\">\r\n     <app-output [output]=\"encodedText\">\r\n       Encoded output\r\n     </app-output>\r\n     <div class=\"custom-control custom-switch\">\r\n       <input type=\"checkbox\" class=\"custom-control-input\" id=\"visualize\" [formControl]=\"visualizationControl\">\r\n       <label class=\"custom-control-label\" for=\"visualize\">Show visualization</label>\r\n     </div>\r\n   </div>\r\n   <app-visualization\r\n     *ngIf=\"visualizationControl.value\"\r\n     header=\"Encoding visualization\"\r\n     [visualizationSteps]=\"visualizationSteps\">\r\n   </app-visualization>\r\n </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {DecodeComponent} from './decode.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ComponentsModule} from '../../components/components.module';\r\nimport {ReactiveFormsModule} from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ComponentsModule,\r\n        ReactiveFormsModule,\r\n    ],\r\n  declarations: [\r\n    DecodeComponent\r\n  ]\r\n})\r\nexport class DecodeModule {\r\n}\r\n","import {Component, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\r\nimport {IVisualizationStep} from '../../services/vigenere-cipher.service';\r\nimport {Subject, interval} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\n\r\nexport interface ICurrentVisualizationStep {\r\n  step: IVisualizationStep;\r\n  index: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-visualization',\r\n  templateUrl: './visualization.component.html',\r\n  styleUrls: ['./visualization.component.css']\r\n})\r\nexport class VisualizationComponent implements OnChanges, OnDestroy {\r\n  @Input() mode = false;\r\n  @Input() visualizationSteps: IVisualizationStep[];\r\n\r\n  currentlyPlaying = false;\r\n  private stopPlaying$ = new Subject<void>();\r\n  private sliderTimeout = 1000;\r\n\r\n  currentStep: ICurrentVisualizationStep;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (\r\n      changes.visualizationSteps?.currentValue?.length\r\n    ) {\r\n      this.restart();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.stopPlaying$.next();\r\n    this.stopPlaying$.complete();\r\n  }\r\n\r\n  prev(): void {\r\n    const index = this.currentStep.index - 1;\r\n    this.currentStep = {\r\n      step: this.visualizationSteps[index],\r\n      index\r\n    };\r\n  }\r\n\r\n  controlPlaying(): void {\r\n    if (this.currentlyPlaying) {\r\n      this.currentlyPlaying = !this.currentlyPlaying;\r\n      this.stopPlaying$.next();\r\n      return;\r\n    }\r\n\r\n    this.currentlyPlaying = !this.currentlyPlaying;\r\n    interval(this.sliderTimeout)\r\n      .pipe(takeUntil(this.stopPlaying$))\r\n      .subscribe(() => {\r\n        this.stopPlayingOnLastStep();\r\n\r\n        this.next();\r\n      });\r\n  }\r\n\r\n  next(): void {\r\n    const index = this.currentStep.index + 1;\r\n\r\n    if (index > this.visualizationSteps.length - 1) {\r\n      return;\r\n    }\r\n    this.currentStep = {\r\n      step: this.visualizationSteps[index],\r\n      index\r\n    };\r\n  }\r\n\r\n  restart(): void {\r\n    this.currentStep = {\r\n      step: this.visualizationSteps[0],\r\n      index: 0\r\n    };\r\n  }\r\n\r\n  private stopPlayingOnLastStep(): void {\r\n    if (this.currentStep.index < this.visualizationSteps.length - 2) {\r\n      return;\r\n    }\r\n\r\n    this.currentlyPlaying = false;\r\n    this.stopPlaying$.next();\r\n  }\r\n}\r\n","<div *ngIf=\"visualizationSteps\">\r\n  <app-matrix [currentVisualizationStep]=\"currentStep\" [decodeMode]=\"mode\">\r\n  </app-matrix>\r\n\r\n  <h3 class=\"text-center\"><small>Key: {{currentStep.step.keyChar}}</small></h3>\r\n\r\n  <h3 class=\"text-center\">\r\n    {{currentStep.step.prevChar}}\r\n    <small>\r\n      <i class=\"fas fa-arrow-right\"></i>\r\n    </small>\r\n    {{currentStep.step.nextChar}}\r\n  </h3>\r\n\r\n  <div class=\"d-flex justify-content-center mt-3\">\r\n    <button class=\"btn btn-secondary mx-3\"\r\n            (click)=\"prev()\"\r\n            *ngIf=\"currentStep.index > 0\">\r\n      <i class=\"fas fa-backward\"></i>\r\n    </button>\r\n    <button class=\"btn btn-success mx-3\"\r\n            *ngIf=\"currentStep.index !== visualizationSteps.length - 1\"\r\n            [ngClass]=\"{\r\n                  'btn-success': !currentlyPlaying,\r\n                  'btn-dark': currentlyPlaying\r\n               }\"\r\n            (click)=\"controlPlaying()\">\r\n      <i class=\"fas\"\r\n         [ngClass]=\"{\r\n              'fa-play': !currentlyPlaying,\r\n              'fa-pause': currentlyPlaying\r\n           }\">\r\n      </i>\r\n    </button>\r\n    <button class=\"btn btn-warning mx-3\"\r\n            (click)=\"restart()\"\r\n            *ngIf=\"currentStep.index === visualizationSteps.length - 1\">\r\n      <i class=\"fas fa-undo\"></i>\r\n    </button>\r\n    <button class=\"btn btn-secondary mx-3\"\r\n            (click)=\"next()\"\r\n            *ngIf=\"currentStep.index < visualizationSteps.length - 1\">\r\n      <i class=\"fas fa-forward\"></i>\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n","import {Component, Input} from '@angular/core';\n\n\n@Component({\n  selector: 'app-output',\n  templateUrl: './output.component.html'\n})\nexport class OutputComponent {\n  @Input() output: string;\n}\n","<div class=\"form-group\">\n  <h3 class=\"text-center mb-5\">\n    <ng-content></ng-content>\n  </h3>\n  <div class=\"form-floating\">\n    <textarea class=\"form-control\" id=\"floatingTextarea\" disabled style=\"height: 150px\">{{output}}</textarea>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {appRoutes} from './app.routes';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(appRoutes),\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {EncodeModule} from './encode/encode.module';\r\nimport {DecodeModule} from './decode/decode.module';\r\nimport {DocumentationModule} from './documentation/documentation.module';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    EncodeModule,\r\n    DecodeModule,\r\n    DocumentationModule\r\n  ],\r\n  exports: [\r\n    EncodeModule\r\n  ]\r\n})\r\nexport class ViewsModule {\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { MainModule } from './main.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(MainModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}